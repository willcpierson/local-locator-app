/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const tourneyData = __webpack_require__(/*! ./tournamentdata.json */ \"./src/tournamentdata.json\"); // const attendeeBackGroundImages = [\"https://fs-prod-cdn.nintendo-europe.com/media/images/10_share_images/games_15/gamecube_12/SI_GCN_SuperSmashBrosMelee_image1600w.jpg\"]\n\n\nfunction removeAllChildNodes(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n\n  ;\n}\n\n;\n\nArray.prototype.quickSort = function (callback) {\n  if (this.length < 2) return this;\n\n  if (!callback) {\n    callback = (x, y) => {\n      if (x < y) return -1;\n      return 1;\n    };\n  }\n\n  const pivot = this[0];\n  let left = this.slice(1).filter(ele => callback(ele, pivot) === -1);\n  let right = this.slice(1).filter(ele => callback(ele, pivot) !== -1);\n  left = left.quickSort(callback);\n  right = right.quickSort(callback);\n  return left.concat([pivot]).concat(right);\n};\n\nfunction sortByEntrantCount(arrayOfTournies, inputtedGame) {\n  // arrayOfTournies: data.tournaments.nodes (each node = obj) inputtedGame: state initals string\n  const sortedTournies = [];\n  const sortThis = [];\n  arrayOfTournies.forEach(tournament => {\n    var _tournament$events$in;\n\n    if ((_tournament$events$in = tournament.events[inputtedGame]) !== null && _tournament$events$in !== void 0 && _tournament$events$in.attendeeList.length) {\n      var _tournament$events$in2;\n\n      sortThis.push((_tournament$events$in2 = tournament.events[inputtedGame]) === null || _tournament$events$in2 === void 0 ? void 0 : _tournament$events$in2.attendeeList.length);\n    }\n  });\n  const sorted = sortThis.quickSort();\n  sorted.forEach(attendeeCount => {\n    arrayOfTournies.forEach(tournament => {\n      var _tournament$events$in3;\n\n      if ((_tournament$events$in3 = tournament.events[inputtedGame]) !== null && _tournament$events$in3 !== void 0 && _tournament$events$in3.attendeeList.length) {\n        if (tournament.events[inputtedGame].attendeeList.length === attendeeCount) {\n          if (!sortedTournies.includes(tournament)) sortedTournies.push(tournament);\n        }\n      }\n    });\n  });\n  return sortedTournies;\n}\n\nfunction sortByAverageEntrantCount(arrayOfTournies, inputtedGame) {\n  const sortedTournies = [];\n  const sortThis = [];\n  arrayOfTournies.forEach(tournament => {\n    var _tournament$events$in4;\n\n    if ((_tournament$events$in4 = tournament.events[inputtedGame]) !== null && _tournament$events$in4 !== void 0 && _tournament$events$in4.pastAttendeeCount) {\n      var _tournament$events$in5;\n\n      let pastTournies = (_tournament$events$in5 = tournament.events[inputtedGame]) === null || _tournament$events$in5 === void 0 ? void 0 : _tournament$events$in5.pastAttendeeCount;\n      let pastTourneyAverage = Math.floor((pastTournies.pastOne + pastTournies.pastTwo + pastTournies.pastThree) / 3);\n      sortThis.push(pastTourneyAverage);\n    }\n  });\n  const sorted = sortThis.quickSort();\n  sorted.forEach(averageAttendeeCount => {\n    arrayOfTournies.forEach(tournament => {\n      var _tournament$events$in6;\n\n      if ((_tournament$events$in6 = tournament.events[inputtedGame]) !== null && _tournament$events$in6 !== void 0 && _tournament$events$in6.pastAttendeeCount) {\n        var _tournament$events$in7;\n\n        let pastTournies = (_tournament$events$in7 = tournament.events[inputtedGame]) === null || _tournament$events$in7 === void 0 ? void 0 : _tournament$events$in7.pastAttendeeCount;\n        let pastTourneyAverage = Math.floor((pastTournies.pastOne + pastTournies.pastTwo + pastTournies.pastThree) / 3);\n\n        if (pastTournies) {\n          if (pastTourneyAverage === averageAttendeeCount) {\n            if (!sortedTournies.includes(tournament)) sortedTournies.push(tournament);\n          }\n        }\n      }\n    });\n  });\n  console.log(sortedTournies);\n  return sortedTournies;\n}\n\nasync function requestGameIds() {\n  let fetchedGameIds;\n  let res = await fetch('https://api.start.gg/gql/alpha', {\n    method: 'POST',\n    headers: {\n      Authorization: 'Bearer a5111b54ba7fb17a3ec32d30ce67ab80'\n    },\n    body: JSON.stringify({\n      \"query\": \"query VideogamesQuery {\\n  videogames(query: {\\n    page: 1\\n    perPage: 500\\n    filter: {\\n      id: null\\n    }\\n  }) {\\n    pageInfo {\\n      total\\n      totalPages\\n      page\\n      perPage\\n    }\\n    nodes {\\n      id\\n      name\\n      displayName\\n      images {\\n        type\\n        width\\n        height\\n        url\\n      }\\n    }\\n  }\\n}\",\n      \"variables\": {\n        \"perPage\": 500\n      },\n      \"operationName\": \"VideogamesQuery\"\n    })\n  });\n  fetchedGameIds = await res.json();\n  let games = fetchedGameIds.data.videogames.nodes;\n  games.forEach(gameObject => {\n    let gameOption = game.appendChild(document.createElement('option'));\n    gameOption.innerHTML = `${gameObject.name}`;\n    gameOption.setAttribute('id', `${gameObject.id}`);\n    gameOption.setAttribute('value', `${gameObject.id}`);\n    console.log(gameOption);\n  });\n}\n\n;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Game ID loading goes here\n  requestGameIds();\n  document.getElementById(\"search-for-tournies-button\").addEventListener('click', event => {\n    event.preventDefault();\n    let findTournament = {\n      game: document.getElementById(\"game\").value,\n      state: document.getElementById(\"state\").value\n    };\n    let inputtedGame = findTournament.game;\n    let inputtedState = findTournament.state;\n    console.log(inputtedGame);\n    const tournamentList = document.querySelector(\"#tournament-listings\");\n\n    async function requestStartApi(state, game) {\n      let res = await fetch('https://api.start.gg/gql/alpha', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer a5111b54ba7fb17a3ec32d30ce67ab80'\n        },\n        body: JSON.stringify({\n          \"query\": `query TournamentsByState($perPage: Int, $state: String!, $videogameId: ID!) {\\n  tournaments(query: {\\n    perPage: $perPage\\n    filter: {\\n      upcoming: true\\n      addrState: $state\\n      videogameIds: [\\n        $videogameId\\n      ]\\n    }\\n  }) {\\n    nodes {\\n      name\\n      addrState\\n      slug\\n      isRegistrationOpen\\n      events(filter: {\\n        videogameId: ${game}\\n      }) {\\n        id\\n        name\\n        numEntrants\\n      }\\n    }\\n  }\\n}`,\n          \"variables\": {\n            \"perPage\": 50,\n            \"state\": state,\n            \"videogameId\": game\n          },\n          \"operationName\": \"TournamentsByState\"\n        })\n      });\n      let fetchedData = await res.json();\n      let tournamentArray = fetchedData.data.tournaments.nodes;\n\n      if (tournamentArray.length <= 0) {\n        let tourneyListHolder = document.getElementById('tourney-list');\n        tourneyListHolder.innerHTML = `\n        <p id=\"tourney-list-holder\">No Tournaments Located!</p>\n        `;\n        console.log('No tournaments here!');\n      } else {\n        tournamentArray.forEach((tournament, i) => {\n          let entrantCount = tournament.events[0].numEntrants;\n\n          if (!tournament.events[0].numEntrants) {\n            entrantCount = `Hidden`;\n          }\n\n          setTimeout(() => {\n            let tourney = tournamentList.appendChild(document.createElement('li'));\n\n            let tournamentEvents = () => {\n              let gameEvents = ``;\n              tourney.events.forEach(event => {\n                gameEvents += JSON.stringify(event);\n              });\n              return gameEvents;\n            };\n\n            tournamentEvents();\n            tourney.setAttribute('data-events', tournamentEvents);\n            tourney.innerHTML = `\n              ${tournament.name} | ${tournament.events[0].name}: ${entrantCount} <i class=\"fa-solid fa-user\"></i> <a href=\"https://www.start.gg/${tournament.slug}\" target=\"_blank\" id='reg-button'>Register</a>\n              `;\n          }, 50 * i);\n        });\n      }\n\n      console.log(fetchedData);\n      return fetchedData;\n    }\n\n    fetchedTournaments = requestStartApi(inputtedState, inputtedGame); // replace \"NJ\" with inputtedGame when ready\n\n    removeAllChildNodes(tournamentList);\n    let tournamentListings = tourneyData.nodes;\n\n    if (document.getElementById(\"most-entrants\").checked) {\n      tournamentListings = sortByEntrantCount(tourneyData.nodes, inputtedGame).reverse();\n    } else if (document.getElementById(\"least-entrants\").checked) {\n      tournamentListings = sortByEntrantCount(tourneyData.nodes, inputtedGame);\n    } else if (document.getElementById(\"avg-entrants\").checked) {\n      tournamentListings = sortByAverageEntrantCount(tourneyData.nodes, inputtedGame).reverse();\n    }\n\n    let promise = Promise.resolve(); // tournamentListings.forEach((tournament) => {\n    //     if (tournament.events[inputtedGame] && tournament.addrState === inputtedState) {\n    //       promise = promise.then(() => {\n    //         let attendees = tournament.events[inputtedGame].attendeeList\n    //         let tourney = tournamentList.appendChild(document.createElement('li'))\n    //         tourney.innerHTML = `\n    //         ${tournament.name} | ${tournament.city}, ${tournament.addrState} <i class=\"fa-solid fa-user\"></i> ${attendees.length} <a href=\"https://www.start.gg/${tournament.slug}\" target=\"_blank\" id='reg-button'>Register</a>\n    //         `\n    //         tourney.setAttribute('id', tournament.id )\n    //         tourney.setAttribute('class', \"one-of-many\")\n    //         return new Promise((resolve) => {\n    //           setTimeout(resolve, 50)\n    //         })\n    //       })\n    //     }\n    // }) \n  });\n}); // Bar Graph\n\nfunction addData(chart, label, data) {\n  // received from chart.js website\n  chart.data.labels.push(label);\n  chart.data.datasets.forEach(dataset => {\n    dataset.data.push(data);\n  });\n  chart.update();\n}\n\nfunction resetChart(chartValueArray) {\n  while (chartValueArray.length > 0) {\n    chartValueArray.pop();\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const ctx = document.getElementById('myChart').getContext('2d');\n  let xAxisNames = [];\n  let chartValues = [];\n  const myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: xAxisNames,\n      // push tourney names into this array\n      datasets: [{\n        label: 'Entrant Count',\n        //What data we are givng; entrant count, reoccurence, etc.\n        data: chartValues,\n        //push entrants into this array\n        backgroundColor: [// repeat this every loop, push into array\n        'rgba(54, 162, 235)', 'rgba(54, 162, 235)'],\n        borderColor: [// repeat this every loop, push into array\n        'rgba(54, 162, 235, 1)', 'rgba(54, 162, 235, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      indexAxis: 'y',\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n  const tourneyList = document.querySelector(\"ol\");\n  tourneyList.addEventListener('click', event => {\n    resetChart(chartValues);\n    resetChart(xAxisNames);\n    let findTournament = {\n      game: document.getElementById(\"game\").value\n    };\n    let inputtedGame = findTournament.game;\n    let attendeeBackGround = document.querySelector(\"#attendee-list\"); // Delete when ready\n\n    let tournamentAttendeeList = document.querySelector(\"#all-attendees\");\n    removeAllChildNodes(tournamentAttendeeList); // tourneyData.nodes.forEach((tournament) => {\n    //   if (tournament.events[inputtedGame]) { // Check game before going forward, otherwise reading undefined error\n    //     const attendees = tournament.events[inputtedGame].attendeeList\n    //       attendees.forEach((attendee) => {\n    //       if (tournament.id === parseInt(event.target.id)) {\n    //       let attendeeListed = tournamentAttendeeList.appendChild(document.createElement('li'))\n    //       attendeeListed.innerHTML = `${attendee}`\n    //       }\n    //     })\n    //   }\n    // })\n\n    if (!(xAxisNames[xAxisNames.length - 1] === event.target.innerText)) {\n      tourneyData.nodes.forEach(tournament => {\n        if (tournament.id === parseInt(event.target.id)) {\n          xAxisName = tournament.name;\n\n          if (tournament.reoccurence === \"weekly\" || tournament.reoccurence === \"biweekly\") {\n            addData(myChart, \"Third Most Recent\", [tournament.events[inputtedGame].pastAttendeeCount.pastOne]);\n            addData(myChart, \"Second Most Recent\", [tournament.events[inputtedGame].pastAttendeeCount.pastTwo]);\n            addData(myChart, \"Most Recent\", [tournament.events[inputtedGame].pastAttendeeCount.pastThree]);\n            addData(myChart, \"Currently Registered\", [tournament.events[inputtedGame].attendeeList.length]);\n          } else {\n            addData(myChart, \"Current Entrants\", [tournament.events[inputtedGame].attendeeList.length]);\n          }\n        }\n      });\n    }\n  });\n}); // Switching Data Representations\n//Switch to Notable Entrants // Delete, only need entrant data\n\ndocument.addEventListener(\"DOMContentLoaded\", e => {\n  document.querySelector(\"#entrants-button\").onclick = () => {\n    const graph = document.querySelector(\"footer\");\n    const attendeeList = document.querySelector(\"#attendee-list\");\n    graph.style.display = \"none\";\n    attendeeList.style.display = \"flex\";\n  };\n}); //Switch to Average Entrants\n\ndocument.addEventListener(\"DOMContentLoaded\", e => {\n  document.querySelector(\"#avg-entrants-button\").onclick = () => {\n    const graph = document.querySelector(\"footer\");\n    const attendeeList = document.querySelector(\"#attendee-list\");\n    graph.style.display = \"block\";\n    attendeeList.style.display = \"none\";\n  };\n}); // Change colors\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let paint = document.querySelector('#paint');\n  let paintValue = paint.getAttribute('value');\n  paint.addEventListener(\"click\", e => {\n    const h1 = document.querySelector('h1');\n    const body = document.querySelector('body');\n    const aside = document.querySelector('aside');\n    const nav = document.querySelector('nav');\n    const listings = document.querySelectorAll(\".one-of-many\");\n    const listingsHover = document.querySelectorAll(\".one-of-many\");\n\n    if (paintValue === \"standard\") {\n      paintValue = \"metroid\";\n      h1.style.color = \"#62dc50\";\n      body.style.backgroundColor = \"#d14949\";\n      aside.style.backgroundColor = \"#4eb13e\";\n      nav.style.backgroundColor = \"#d14949\"; // do hover listings as well once figured out\n\n      if (listings) {\n        listings.forEach(tournament => {\n          tournament.style.backgroundColor = \"#62dc50\";\n        });\n      }\n    } else {\n      paintValue = \"standard\";\n      h1.style.color = \"white\";\n      body.style.backgroundColor = \"#5284cf\";\n      aside.style.backgroundColor = \"#3976bc\";\n      nav.style.backgroundColor = \"#5284cf\"; // do hover listings as well once figured out\n\n      if (listings) {\n        listings.forEach(tournament => {\n          tournament.style.backgroundColor = \"#71A9F7\";\n        });\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./src/tournamentdata.json":
/*!*********************************!*\
  !*** ./src/tournamentdata.json ***!
  \*********************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"nodes":[{"slug":"tournament/syracuse-smash-rgc-2022","id":1,"name":"Syracuse Smash @ RGC 2022","city":"Syracuse","addrState":"NY","reoccurence":"weekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide"],"pastAttendeeCount":{"pastOne":17,"pastTwo":29,"pastThree":21}}}},{"slug":"tournament/pk-fire-10","id":2,"name":"PK Fire 10","city":"Poughkeepsie","addrState":"NY","reoccurence":"biweekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"],"pastAttendeeCount":{"pastOne":9,"pastTwo":21,"pastThree":15}},"Super Smash Bros. Ultimate":{"attendeeList":["MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","BuckleBeeBlap","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"],"pastAttendeeCount":{"pastOne":21,"pastTwo":17,"pastThree":23}}}},{"slug":"tournament/the-honeycomb-iv","id":3,"name":"The Honeycomb IV","city":"Rochester","addrState":"NY","reoccurence":"biweekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib"],"pastAttendeeCount":{"pastOne":7,"pastTwo":14,"pastThree":8}},"Super Smash Bros. Ultimate":{"attendeeList":["MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","BuckleBeeBlap"],"pastAttendeeCount":{"pastOne":21,"pastTwo":17,"pastThree":24}}}},{"slug":"tournament/nyu-melee-torch-fest-3-with-amateur-bracket","id":4,"name":"NYU Melee Torch Fest #3 (WITH AMATEUR BRACKET)","city":"Brooklyn","addrState":"NY","reoccurence":"biweekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337"],"pastAttendeeCount":{"pastOne":19,"pastTwo":24,"pastThree":20}}}},{"slug":"tournament/the-nightclub-s4e10-os-nyc","id":5,"name":"The Nightclub S4E10 @ OS NYC","city":"New York","addrState":"NY","reoccurence":"weekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Void","Danny Phantom","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","deft","Wally","Yahooz","Swiftbass","Cmac","Jessica Jones","cowboy","altered","Jamrun"],"pastAttendeeCount":{"pastOne":72,"pastTwo":96,"pastThree":81}}}},{"slug":"tournament/nyu-melee-torch-fest-3-with-amateur-bracket","id":7,"name":"The Function 2","city":"Brooklyn","addrState":"NY","reoccurence":"major","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moburu","unga bunga","semi-colon","Hercules","DarkGenex","Aklo","a horse who can drive","Void","Danny Phantom","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Luu","Spareparts","Mars","Daniel"]}}},{"slug":"tournament/nyu-melee-torch-fest-3-with-amateur-bracket","id":8,"name":"Another NYC Tournament??? #136","city":"New York","addrState":"NY","reoccurence":"weekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk"],"pastAttendeeCount":{"pastOne":9,"pastTwo":13,"pastThree":11}}}},{"slug":"tournament/nyu-melee-torch-fest-3-with-amateur-bracket","id":9,"name":"Smash The Spire #13","city":"Bronx","addrState":"NY","reoccurence":"biweekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Isles","Duk"],"pastAttendeeCount":{"pastOne":15,"pastTwo":15,"pastThree":16}}}},{"slug":"tournament/apex-2022/details","id":10,"name":"Apex 2022","city":"Secaucus","addrState":"NJ","reoccurence":"major","events":{"Super Smash Bros. Melee":{"attendeeList":["Mango","Hungrybox","Zain","iBDW","Zuppy","Amsa","Leffen","a horse who can drive","Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"]},"Super Smash Bros. Ultimate":{"attendeeList":["MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","BuckleBeeBlap"]}}},{"slug":"tournament/nyu-melee-torch-fest-3-with-amateur-bracket","id":11,"name":" Stage Select #84","city":"Jersey City","addrState":"NJ","reoccurence":"weekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Yahooz","Swiftbass","Cmac","Jessica Jones","cowboy","altered","Jamrun"],"pastAttendeeCount":{"pastOne":29,"pastTwo":31,"pastThree":21}}}},{"slug":"tournament/apex-2022/details","id":10,"name":"EVO but New York","city":"New York","addrState":"NY","reoccurence":"major","events":{"Super Smash Bros. Melee":{"attendeeList":["Mango","Hungrybox","Zain","iBDW","Zuppy","Amsa","Leffen","a horse who can drive","Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"]},"Street Fighter V":{"attendeeList":["MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","BuckleBeeBlap","MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John"]}}},{"slug":"tournament/apex-2022/details","id":10,"name":"Some Fighting Game Tournament #2138","city":"Secaucus","addrState":"NJ","reoccurence":"weekly","events":{"Super Smash Bros. Melee":{"attendeeList":["Mango","Hungrybox","Zain","iBDW","Zuppy","Amsa","Leffen","a horse who can drive","Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"],"pastAttendeeCount":{"pastOne":15,"pastTwo":15,"pastThree":16}},"Super Smash Bros. Ultimate":{"attendeeList":["MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","BuckleBeeBlap","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"],"pastAttendeeCount":{"pastOne":15,"pastTwo":15,"pastThree":16}},"Street Fighter V":{"attendeeList":["Daigo","Justin Wong","Tokido","Leffen","Ryu","Ken","Luke","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"],"pastAttendeeCount":{"pastOne":15,"pastTwo":15,"pastThree":16}}}},{"slug":"tournament/apex-2022/details","id":10,"name":"FGC Glory #2","city":"West Orange","addrState":"NJ","reoccurence":"weekly","events":{"Street Fighter V":{"attendeeList":["Mango","Hungrybox","Zain","iBDW","Zuppy","Amsa","Leffen","a horse who can drive","Jflex","Bbatts","Ryobeat","JoJo","Jmook","Willy P","Fahey","Drew6","forsaken","Zann","Forte","Siddward","Mot$","Vino","Jib","Moky","Polish","Swedish Delight","Tommy","BuckleBeeBlap","Lord of Runescape","Player 1337","Thomas","Jimmy Jams","Alto","Soprano","Stark","Skywalker","App Academy Assassin","Baelish","Subway: Eat Fresh","Username Blank","Sicko Mode","Endeavor","Solo","Picard","Parker","Hornet","BumbleBee","$$$$","Timebones","SlipnSlide","Prometheus","HiFi","Isles","Duk","AliceClimbers"],"pastAttendeeCount":{"pastOne":32,"pastTwo":21,"pastThree":23}},"Super Smash Bros. Ultimate":{"attendeeList":["MKLeo","Tweek","Sparg0","Hungrybox","Light","Wizzrobe","Maister","FlimFlam","Boople","Sham","John","BuckleBeeBlap"],"pastAttendeeCount":{"pastOne":15,"pastTwo":15,"pastThree":16}}}}]}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;